<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
  xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns="http://www.tei-c.org/ns/1.0">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Encodage de l'Archive de l'Oulipo : manuel de référence</title>
        <author>Lou Burnard Consulting</author>
      </titleStmt>
      <publicationStmt>
        <p>For publication on the website</p>
      </publicationStmt>
      <sourceDesc>
        <p>Original source</p>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change when="2017-06-03">Traduction francaise initiale</change>
      <change when="2017-06-01">First version (in English)</change>
    </revisionDesc>
  </teiHeader>
  <text>
    <body>
      <div>
        <head>Introduction</head>
        <p>Ce document décrit un schéma TEI XML destiné à l'usage du projet <ref
            target="http://difdepo.hypotheses.org/le-projet/le-projet-archives-de-loulipo"
            >Transcription de l'archive de l'Oulipo </ref>. Il rassemble de discussions et
          d'exemplaires des éléments TEI figurants dans chacun des textes transcrits avec une
          définition formelle de la manière où cette vocabulaire de balisage a été dérivé des <ref
            target="http://www.tei-c.org/Guidelines">TEI Guidelines</ref>. </p>
        <p>Les transcriptions des documents Oulipo sont archivés sous un format TEI XML format,
          utilisant des balises XML spécifiques pour les organiser. Ces balises constituent un sous
          ensemble personnalisé des balises fournis par les TEI Guidelines
          (http://www.tei-c.org/Guidelines). Le sous ensemble sélectionné est assez petit et
          l'utilisation prévue pour chaque balise sélectionné est decrit dans ce document,
          permettant ainsi la génération automatique d'un schéma informatique pour la validation des
          documents concernés. </p>
        <p>Dans la suite, nous discutons d'abord le balisage fondamental qui sert à structurer le
          texte de chaque document (<ptr target="#textStruc"/>) ; ensuite, nous presentons le
          balisage spécialisé utilisé pour les composants significatifs identifiés dans le texte,
          tels que les termes techniques, les noms de personnes ou de lieux, etc.) (<ptr
            target="#namedEnts"/>) ; enfin nous presentons l'organisation de l'entête TEI (<q>TEI
            Header</q>) qui contient de métadonnées décrivants le document (<ptr target="#theHdr"
          />). La dernière partie du document actuel contient un référence téchnique, décrivant
          d'une manière standardisée tout composant du schéma d'encodage, établissant ainsi un lien
          avec son origine dans les TEI Guidelines. </p>
        <p>Des connaissances basiques de TEI XML sont présumés. </p>
      </div>
      <div xml:id="textStruc">
        <head>Structuration des documents</head>
        <p>Tout document transcrit par le projet se présente sous la forme d'un seul élément
            <gi>TEI</gi> ayant deux parties : un <gi>teiHeader</gi> rassemblant de métadonnées qui
          décrivent le document, et un <gi>text</gi> qui contient sa transcription. Nous traitons du
            <gi>teiHeader</gi> ci-après dans la section <ptr target="#theHdr"/>.</p>
        <p>Les images numériques de chaque <q>document</q> portent un code identifiant, dérivé du
          côte attribué à cette source dans le catalogue de la Bibliothèque de l'Arsenal. La plupart
          des documents concernent une des réunions régulières de l'Oulipo: nous distinguons donc
          quatre types: <list type="vals">
            <label>CR</label>
            <item>contient le compte rendu d'une réunion </item>
            <label>OJ</label>
            <item>contient l'ordre du jour d'une réunion</item>
            <label>CV</label>
            <item>contient une convocation a une réunion </item>
            <label>AUTRE</label>
            <item>tout autre type de document </item>
          </list>
        </p>
        <p>Nous utilisons l'attribut <att>xml:id</att> de l'élemént <gi>TEI</gi> pour fournir un
          identifiant unique au document représente par cet élément. Cet identifiant rassemble le
          code de l'image numérique, la date de la réunion concernée, et un des codes de type de
          document indiqués au-dessus, comme témoigne l'exemple ci-dessous. Ce code de type de
          document est aussi utilisé comme valeur de l'attribut <att>type</att> sur l'élément
            <gi>text</gi>.</p>
        <p>Comme exemple, voici la structure du document qui contient le compte rendu de la réunion
          de janvier 1961 et qui correspond au scan numeroté T10010004 :
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <TEI xml:id="T10010004-1961-01-cr">
              <teiHeader>
                <!-- ... -->
              </teiHeader>
              <text type="CR">
                <body>
                  <!-- ... -->
                </body>
              </text>
            </TEI>
          </egXML>
        </p>
        <p>Il est à noter que l'élément <gi>text</gi> contient obligatoirement un élément
            <gi>body</gi> qui comprend tout le texte transcrit du document.</p>
        <p>
          <specList>
            <specDesc key="text" atts="type"/>
            <specDesc key="body"/>
          </specList>
        </p>
        <p>Le système d'encodage TEI permet une division hiérarchique de l'élément <gi>body</gi> en
          utilisant d'éléments <gi>div</gi>, bien que la majorité des documents transcrits ne s'en
          servent pas. Où cet élément est utilisé, si une division commence avec un ou plusieurs titres
          ces derniers peuvent être signalés en utilisant l'élément <gi>head</gi>.<specList>
            <specDesc key="div"/>
            <specDesc key="head"/>
          </specList>
        </p>
        <div>
          <head>Coupures de page et de ligne </head>
          <p>Au sein d'une transcription, un balise vide <gi>pb</gi> apparait au début de chaque
            nouvelle page. Son attribut <att>n</att> peut fournir un numéro de page si la page est
            numerotée: son attribut <att>facs</att>  fournit un lien vers l'image numérique
            de la page transcrite. Par exemple :
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <p>
                <term>OuLiPo</term> : Organisme qui se propose d’examiner en quoi et par quel moyen,
                étant donnée une théorie scientifique concernant éventuellement le langage (donc :
                l’anthropologie), on peut y introduire du plaisir esthétique (affectivité et
                fantaisie).</p>
              <pb facs="difdepo:T10010007-1961-04-17-cr-03" n="3"/>
              <p>
                <term>Oulipiens</term> : Rats qui ont à construire le <term>labyrinthe</term> dont
                ils se proposent de sortir. </p>
            </egXML>
            <!-- t10010007-1961-04-17-cr.xml -->
          </p>
          <p>La balise vide <gi>lb</gi> est parfois utilisée pour indiquer une coupure de ligne
            signifiante dans le texte. D'habitude les coupures de ligne ne sont pas considerées
            d'importance et ne sont pas gardées, puisque le but principal de cet encodage n'est pas
            de saisir les aspects visuels ou physiques du document, cet objectif étant mieux servi
            par les images numerisées. Par contre, notre encodage vise à saisir la structure
            rhétorique de chaque document et de signaller la présence de quelques traits signifiants
            là dedans; notamment la présence de termes techniques et de références aux entités nommés
            tels que les personnes, les lieux, les oeuvres etc. </p>
          <p>
            <specList>
              <specDesc key="pb"/>
              <specDesc key="lb"/>
            </specList></p>
        </div>
        <div>
          <head>Paragraphes et listes</head>
          <p>Nos transcriptions utilisent l'élément TEI <gi>p</gi> pour tout bloc de texte, y
            compris les composants d'une liste et les titres. Plusieurs éléments sont disponibles à
            l'intérieur d'un <gi>p</gi> outre de texte pure (par exemple <gi>term</gi> et
              <gi>persName</gi>): nous considérons ceux ci et d'autres ci dessous. </p>
          <p>Il est à noter que les paragraphes initiales d'un document, qui contiennent d'habitude
            de metadonnées sur sa fonction, son lieu, sa date etc., sont distingués des autres en
            utilisant la valeur spéciale <val>incipit</val> pour leur attribut <att>rend</att>. Leur
            contenu est transféré automatiqement dans l'entête TEI. </p>
          <p>Une liste d'items, en particulier une liste numerotéee, devrait par préférence être
            balisée en utilisant les éléments TEI standards <gi>list</gi> and <gi>item</gi> 
            comme suit :
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <p>Les absents s’étant excusés eux-mêmes, le <persName ref="#president"
                  >Président</persName> se donne la parole assez facilement, pour constater que
                :</p>
              <list type="ordered">
                <item>le point (a) de l’ordre du jour (les <term>monosyllabes</term>
                    d’<persName>Amédée Pommier</persName>) est, en l’absence d’<persName>A.M.
                    Schmidt</persName>, exclu du dit ordre ;</item>
                <item>qu’il en est de même du point (c), en l’absence de <persName>S. Exc.
                    Q.B</persName>. ;</item>
                <item>qu’en l’absence des mathématiciens, le point (b) doit être reporté à une date
                  ultérieure</item>
              </list></egXML>
          </p>
          <p>Si la saisie précise de la structure d'une liste n'a pas pu s'effectuer il peut arriver
            que chacun des items se présente comme un élément <gi>p</gi>. </p>
          <p>
            <specList>
              <specDesc key="p"/>
              <specDesc key="list"/>
              <specDesc key="item"/>
            </specList>
          </p>
        </div>
        <div>
          <head>Rubriques et Titres</head>
          <p>De la même manière la saisie d'un document organisé en plusieurs niveaux avec plusieurs
            titres et soustires peut etre difficile à effectuer correctement avec l'approche classique
            TEI des éléments <gi>div</gi> et <gi>head</gi> proposé ci dessus. Pour simplifier, il
            est permis d'utiliser l'élément <gi>label</gi> à l'interieur d'un <gi>p</gi> qui semble
            contenir une rubrique ou un titre; comme l'exemple suivant : </p>
          <p>
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <p><label type="rubrique">3) Bibliothèque oulipienne</label></p>
              <list type="unordered">
                <item>Bilan <persName>Marcel</persName> Diffusion, distribution et dépôt.</item>
                <item>Calcul du prix <persName>Marcel</persName> et <persName>Paul</persName></item>
                <item>Phynance <persName>Marcel B</persName></item>
              </list>
              <p><label type="rubrique">4) Phynances</label></p>
              <list type="unordered">
                <item><persName>Mme Brun</persName> - <persName>Dominique</persName></item>
                <item>Appel secrétariat. <persName>Fournel</persName></item>
              </list>
              <!-- t100110205-1978-04-oj -->
            </egXML>
          </p>
          <p>L'attribut <att>type</att> de l'élément <gi>label</gi> porte la valeur
              <val>rubrique</val> lorsqu'il fonctionne de cette manière. La valeur
              <val>locuteur</val> est également disponible pour indiquer que le label sert à
            indiquer la personne qui parle. </p>
          <p><specList>
              <specDesc key="label" atts="type"/>
            </specList></p>
        </div>
        <div>
          <head>Enjeux de Transcription</head>
          <p>Bien que le but du projet ne serait pas de produire une édition critique classique, il
            y a parfois des passages qui nécessitent un balisage quasi editoriel, par exemple parce
            que la transcription est incertaine ou incomplète; ou parce qu'on souhaite indiquer une
            lacune ou un raturage dans l'originel. </p>
          <p>Dans cet exemple, le transcripteur signale son incertitude concernant la transcrition
            du mot <mentioned>miquerel</mentioned> en se servant du balise <gi>unclear</gi> :
            <egXML xmlns="http://www.tei-c.org/ns/Examples"><p>
                <label type="rubrique">Arrivée de <persName>Calvino</persName> (qui passe ce soir à
                    <name type="manif">Apostrophes</name> et qui est un peu
                    <unclear>miqurel</unclear>).</label></p>
            </egXML>
          </p>
          <p>Dans cet example, le transcripteur n'arrive pas à lire l'originel de tout ; l'élément
              <gi>gap</gi> est donc utilisé pour signaler qu'il y a quelque chose qui manque à la
            transcription :
            <egXML xmlns="http://www.tei-c.org/ns/Examples"><p>... <persName>PF</persName> propose
                de traduire <title>Mein Kampf</title> qui est sans doute la <gap/> de « La
                Recherche ».</p>
            </egXML>
            <!-- T10010246-1982-01-CR.xml --></p>
          <p>Dans cet example, le transcripteur souhaite indiquer que le mot <q>Compléments</q> est
            lisible mais raturé dans la source originelle :
            <egXML xmlns="http://www.tei-c.org/ns/Examples"><p>
                <label type="rubrique">Création</label>
              </p>
              <list type="unordered">
                <item><persName>Marcel Bénabou</persName> : les <del>Compléments</del> la Poésie
                  paronynymiques</item>
                <item><persName>François Caradec</persName> : Défi de Roubaud</item>
              </list></egXML>
          </p>
          <p><specList>
              <specDesc key="unclear"/>
              <specDesc key="gap"/>
              <specDesc key="del"/>
            </specList></p>
        </div>
        <div>
          <head>Termes, noms, et notes</head>
          <p>Les mots et les phrases qui représentent des concepts ou des themes particulières qux
            Oulipiens sont indiqués en utilisant l'élément <gi>term</gi> element, pour faciliter
            entre autres objectifs la
            construction d'un index thématique du corpus. Par exemple : 
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <p>
                <persName>LE</persName> : système de la <term>contrainte provisoire</term> :
                construire le texte sur une contrainte, puis le traduire en langage normal </p>
            </egXML>
          </p>
          <p>Les mots et les phrases qui contiennent le nom d'un évènement externe tel qu'un colloque
            ou une manifestation etc sont indiqués en utilisant l'élément  <gi>name</gi> element,
            avec son attribut
              <att>type</att> portant la valeur <val>manif</val>, par exemple :
            <egXML xmlns="http://www.tei-c.org/ns/Examples"><p>
                <persName>Paul Braffort</persName> fait une communication sur le récent <name
                  type="manif">colloque de Besançon</name> sur la <term>lexicographie</term>.</p>
            </egXML>
            <!-- t10010009-1961-06-27-cr-->
          </p>
          <p>Noter que l'élément <gi>name</gi> sert aussi à signaller le nom d'un transcripteur ou
            d'un editeur apparaissant dans l'entête TEI. Par contre, les noms des personnes, de
            lieux, d'organisations, et des oeuvres figurant dans les textes sont tous balisés en utilisant des éléments plus
            spécialisés, précisés dans la section suivante <ptr target="#namedEnts"/>. </p>
          <p>Si possible, les notes de bas de page sont balisées en utilisant l'élément <gi>note</gi>.
            Cet élément remplace le chiffre indiquant la présence d'une note et contient le texte de
            la note. L'attribut <att>n</att> contient le numéro de la note, et
            l'attribut <att>place</att>, ayant valeurs possibles <val>foot</val> et <val>end</val>
            precise la 
            position du texte de la note dans l'originel. Par exemple, supposant que le texte
              <q>D'autres alexandrins...</q> soit en bas de la page :  </p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples"><p> ... on salua gravement Lady Godiva,
              puis on siffla des kirs correctement dosés<note n="1" place="foot">
                <p>D’autres <term>alexandrins</term> seront dissimulés. Cherchez-les ! C’est un jeu
                  de vacances. (Aucun prix ne sera décerné.)</p>
              </note>.</p><!-- t10010010-1961-08-cr--></egXML>
          <p><specList>
              <specDesc key="term"/>
              <specDesc key="name" atts="type"/>
              <specDesc key="note" atts="n place"/>
            </specList></p>
        </div>
        <div xml:id="namedEnts">
          <head>Noms propres</head>
          <p>Dans une transcription, les noms de personnes, de lieux, d'organisations, et d'oeuvres
            sont balisés utilisant l'élément approprié choisi dans la liste suivante : <specList>
              <specDesc key="persName"/>
              <specDesc key="placeName"/>
              <specDesc key="orgName"/>
              <specDesc key="title"/>
            </specList></p>
          <p>En chaque cas, l'attribut <att>ref</att> peut fournir un  code
            identifiant l'entité (la personne, le lieu, l'organisation, l'oeuvre) nommé. Ce
            mécanisme nous permet de résoudre le problème occasionné par l'existence des formes multiples 
            d'une seule nomination. Par exemple :
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <persName ref="#RQ">Raymond Queneau</persName> ..... <persName ref="#RQ">RQ</persName>
              ... Le <persName ref="#RQ">Satrape Queneau</persName>... </egXML>
             Le même  code (<code>RQ</code>) est associé avec tous les formes differents du nom de
            cette personne. Ce code fonctionne également comme identifiant d'un élément
            <gi>person</gi> ailleur dans notre corpus regroupant les informations ce dont nous
            disposons concernant cette
            personne dans un seul endroit. </p>
          <p>Les éléments <gi>placeName</gi> et <gi>orgName</gi>elements fonctionnent de la même
            manière :
            <egXML xmlns="http://www.tei-c.org/ns/Examples"><placeName ref="#restoLaborderie"
                >restaurant Laborderie</placeName></egXML>
            <egXML xmlns="http://www.tei-c.org/ns/Examples"><p>Le président parla d’abord, pour
                faire part d’une lettre de M. <persName ref="#jeancocteau">Jean Cocteau</persName>
                (de l’<orgName ref="#acadFrancaise">Acadéfraise</orgName>)....</p>
            </egXML>
          </p>
          <p>Les valeurs utilisées pour l'attribut <att>ref</att> attribute ici et ailleurs sont des
            codes arbitraires générés automatiquement pendant le traitement du corpus et puis
            raffinés pour éliminer les doublons et résoudre les  ambiguités. Ce travail est toujours
            en cours...
          </p>
        </div>
      </div>
      <div>
        <head>Registre d'entités</head>
        <p>En correspondence  avec ces balises <q>entité réferants</q>, nous maintenons un
          <q>registre d'entités</q>. C'est un document TEI indépendent contenant des listes des
          personnes, lieux. organisations, et oeuvres référenciés dans l'ensemble du corpus. Sont
          utilisés dans ce document les éléments suivants :
 <specList>
            <specDesc key="listPerson"/>
            <specDesc key="person"/>
            <specDesc key="listPlace"/>
            <specDesc key="place"/>
            <specDesc key="listOrg"/>
            <specDesc key="org"/>
            <specDesc key="listBibl"/>
            <specDesc key="bibl"/>
            <specDesc key="listEvent"/>
            <specDesc key="event"/>
          </specList></p>
        <div>
          <head>Personnes</head>
          <p>L'élément <gi>listPerson</gi> contient plusieurs éléments <gi>person</gi>,
            contenant chacun un ou plusieurs des éléments suivants : <specList>
              <specDesc key="persName"/>
              <specDesc key="birth"/>
              <specDesc key="death"/>
              <specDesc key="affiliation"/>
            </specList></p>
          <p>Ces éléments portent entre autres des attributs permettant de préciser la chronologie
            de leur applicabilité à la personne concernée, par exemple l'attribut 
              <att>when</att> pour indiquer une date précise, et les attributs <att>notBefore</att>
            et
            <att>notAfter</att> pour indiquer une plage de dates possibles.  <!--It is thus possible to
            indicate each of person's (possibly many) names or affiliations at different times in
            their life.--></p>
            <p>Par exemple :
              <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <person xml:id="MD" n="15">
                <persName>Marcel Duchamp</persName>
                <birth when="1887"/>
                <death when="1968-10-02">Excusé depuis le 2 octobre 1968</death>
                <affiliation when="1962-03-16">Entré à l'Oulipo le 16 mars 1962 </affiliation>
              </person>
            </egXML>
          </p>
        </div>
        <div>
          <head>Lieux et organisations</head>
          <p>L'élément  <gi>listPlace</gi> contient plusieurs éléments  <gi>place</gi> elements,  
            contenant chacun un ou plusieurs des éléments suivants : <specList>
              <specDesc key="placeName"/>
            </specList>
          </p>
          <p>Par exemple :
            <egXML xmlns="http://www.tei-c.org/ns/Examples"><listPlace>
                <place xml:id="#restauLaborderie">
                  <placeName>restaurant Laborderie</placeName>
                  <location><address>40 rue de l’Université</address></location>
                </place></listPlace></egXML>
          </p>
          <p>L'élément  <gi>listOrg</gi> contient plusieurs éléments <gi>org</gi> elements,
            contenant chacun un ou plusieurs des éléments suivants : <specList>
              <specDesc key="orgName"/>
            </specList></p>
          <p>Par exemple :
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <listOrg>
                <org xml:id="myam">
                  <orgName>M Y A M</orgName>
                </org>
                <org xml:id="acadFran">
                  <orgName>Académie Francaise</orgName>
                  <orgName>Acadéfraise</orgName>
                </org><!--...--></listOrg>
            </egXML>
          </p>
        </div>
        <div>
          <head>Oeuvres et évènements</head>
          <p>L'élément <gi>listBibl</gi> contient plusieurs éléments  <gi>bibl</gi>  contenant chacun un ou plusieurs des éléments suivants :  <specList>
              <specDesc key="title"/>
              </specList></p>
          <p>Par exemple :
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <bibl xml:id="leducationsentimentale">Gustave Flaubert : <title>L’Education
                  sentimentale</title></bibl>
            </egXML>
          </p>
          <p>L'élément  <gi>listEvent</gi>
            contient plusieurs éléments <gi>event</gi> contenant chacun un ou plusieurs des éléments suivants : <specList>
              <specDesc key="desc"/>
              <specDesc key="label"/>
            </specList></p>
          <p>Par exemple :
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <event xml:id="concoursdesartistes">
                <label>Concours des Artistes</label>
                <desc><!-- description du concours a fournir --></desc>
              </event>
            </egXML>
          </p>
        </div>
      </div>
      <div xml:id="theHdr">
        <head>L'entête TEI</head>
        <p>Chaque document contient un entête TEI, fournissant de métadonnées essentielles. Ces
          données sont générées automatiquement à partir des données saisies par un template Word
          lors de la transcrition du document. Comme tout autre document TEI l'entête est représenté
          par un élément
            <gi>teiHeader</gi>, contenant un élément <gi>fileDesc</gi>, suivi d'un élément <gi>revisionDesc</gi>. </p>
        <p>Le <gi>fileDesc</gi> du  document dispose des composants TEI standard suivants : <specList>
            <specDesc key="titleStmt"/>
            <specDesc key="publicationStmt"/>
            <specDesc key="sourceDesc"/>
          </specList>
        </p>
        <p>Le <gi>titleStmt</gi> contient toujours un élément <gi>title</gi> suivi d'au moins un
          élément  <gi>respStmt</gi>. Le <gi>title</gi> contient un titre pour le document construit
          selon la formule suivante :
          : <eg>Transcription du scan [nombre scan] pp. [nombre de page initiale] à [nombre de page
            finale] ([code de type de document]) : version TEI</eg>. <!--Le [number of
          scan] is also used to identify the file name containing the document and is allocated by ?
          . --> Les deux nombres de pages sont toujours présents même s'ils sont identiques, et
          meme s'ils sont tous les deux 1. Le code de type de document est le code à deux lettres
          utilisé également comme valeur de l'attribut
          <att>type</att>  de l'élément  <gi>text</gi> associé. </p>
        <p>Chaque élément <gi>respStmt</gi> sert à indiquer la personne responsable d'un aspect du
          document, et a deux composants : un  élément <gi>resp</gi> précisant le type de
          responsabilité (par exemple <code>transcription</code>) et un élément <gi>name</gi>
          fournissant le nom de la personne concernée. Par exemple :
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <respStmt>
              <resp>transcription</resp>
              <name>Susie Cronin</name>
            </respStmt></egXML>
        </p>
        <p>L'élément <gi>publicationStmt</gi> contient toujours la meme indication du distributeur
          des documents : <eg> Edition numérique distribué par le projet ANR DifDePo
          </eg></p>
        <p>L'élément <gi>sourceDesc</gi> contient toujours un seul élément <gi>bibl</gi> d'un format
          contraint. Dans nos documents un  <gi>bibl</gi>
         doit contenir soit une chaine de caractères sans balise, soit au moins un des éléments
         suivants : <specList>
            <specDesc key="meeting"/>
            <specDesc key="title"/>
          </specList></p>
        <p>Chaque élément <gi>idno</gi> contient un identifiant pour le document concerné. Son attribut
            <att>type</att> attribute sert à distinguer parmi les types d'identifiant possibles et 
          prends une des valeurs suivantes : <list type="labelled">
            <label>ark</label>
            <item>BNF "ark" archival identifier</item>
            <label>ead</label>
            <item>BNF EAD format identifier</item>
            <label>[aucun]</label>
            <item>Identifiant du projet</item>
          </list></p>
        <p>L'élément <gi>meeting</gi> est utilisé uniquement pour un document contenant un compte rendu<!--, in
          which case the corresponding <gi>text</gi> element will have a <att>type</att> of
            <val>CR</val>.--> Son attribut <att>xml:id</att> fournit un identifiant pour la réunion
          concernée, d'habitude correspondant à l'identifiant du document mais sans suffix  (CR, CV
          etc).  L'élément doit contenir un élément 
            <gi>date</gi> element, précisant la date de la réunion facultativement suivi d'un
          élément 
            <gi>placeName</gi> fournissant son lieu, si specifié. Un élément
            <gi>list</gi> element, de <att>type</att>  <val>present</val> complète cet élément
          en fournissant une liste des personnes assistant à la réunion. Par exemple :
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <bibl>
              <idno type="ark">12148/btv1b10010018z</idno>
              <idno type="ead">d0e408</idno>
              <idno>t10010018-1962-04-cr</idno>
              <meeting xml:id="t10010018-1962-04">
                <date when="1962-04-12"/>
                <list type="present">
                  <item>
                    <persName ref="#RQ"/>
                  </item>
                  <!-- ... -->
                  <item>
                    <persName ref="#JB"/>
                  </item>
                  <item>
                    <persName role="président" ref="#JL"/>
                  </item>
                </list>
              </meeting>
            </bibl>
          </egXML>
        </p>
        <p>Dans l'entete, l'élément  <gi>title</gi> est utilise pour la specification de tout qutre
          type de document (OJ,
          pour les ordres du jour; CV pour les convocations). Il contient une phrase de formule
          décrivant le document concerné, disposant d'un élément 
         <gi>ref</gi> element pour cibler l'élément
            <gi>meeting</gi>  concerné, et facultativement un <gi>date</gi> si la date du document
          est connu. Voici un ordre du jour typique :
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <title>Ordre de jour de <ref target="#T10010007-1961-05-03">la réunion Oulipo</ref> du
                <date when="1961-05-03">mai 1961</date></title></egXML>
        </p>
        <p>Voici une convocation typique :
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <title>Convocation à <ref target="#T10010273-1984-07">une réunion Oulipo</ref>, envoyée
              le <date when="1984-07-01"/> par <persName role="expéditeur">PF</persName>
              Destinataire : <persName role="destinataire">XX</persName></title>
          </egXML>
        </p>
        <p>Si le titre contient des noms ou des dates il seront d'habitude
          balises en utilsant les balises <gi>date</gi> ou <gi>persName</gi> comme dans l'exemple
          ci-dessus. L'attribut <att>when</att> de l'élément
           <gi>date</gi> fournit un forme normalisé de la date et doit etre fourni, independemment
          d'une expression plus verbose de l date comme contenu de l'élément <gi>date</gi>.
          L'attribut
            <att>role</att> de l'élément <gi>persName</gi> sert à indiquer la fonction de la
          personne referenciée. Dans l'exemple ci dessus, Fournel envoie une invitation à une
          personne inconnue. L'attribut <att>role</att> attribute peut prendre les valeurs suivantes
          : <list type="gloss">
            <label>invité</label>
            <item>person invited to a meeting</item>
            <label>président</label>
            <item>president or chair of a meeting</item>
            <label>secrétaire</label>
            <item>secretary or note taker of a meeting</item>
            <label>expéditeur</label>
            <item>person responsible for sending an invitation</item>
            <label>destinataire</label>
            <item>person to whom an invitation is sent</item>
          </list>
        </p>
        <!-- <p>A <gi>bibl</gi> element may occasionally be used to document a non-archival document, for
          example </p>
       -->
        <p>L'élément <gi>revisionDesc</gi> element for a difDepo document uses the following standard TEI
          components: <specList>
            <specDesc key="revisionDesc"/>
            <specDesc key="listChange"/>
            <specDesc key="change"/>
          </specList>
        </p>
        <p>A revision description contains a list of significant changes to the document, in reverse
          chronological order (most recent first). Each change is indicated by a <gi>change</gi>
          element. The date of the change is given by its <att>when</att> attribute, and the nature
          of the change by its content. The person responsible for the change may be indicated by
          its <att>who</att> attribute. <!-- or @resp --></p>
        <p>For this project, every document contains one <gi>change</gi> element created at the time
          the document was first created in TEI XML form. Additional <gi>change</gi> elements may be
          automatically created and inserted for later stages of the development of the archive.</p>
      </div>
      <xi:include href="difdepo.odd"/>
    </body>
  </text>
</TEI>
